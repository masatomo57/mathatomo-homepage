name: Deploy to EC2

on:
  push:
    branches:
      - main  # または deploy 対象ブランチ

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: チェックアウト
      uses: actions/checkout@v3

    - name: AWS 認証設定
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Docker イメージをビルドして ECR に push
      run: |
        IMAGE_URI=756998121759.dkr.ecr.ap-northeast-1.amazonaws.com/namespace/mathatoms-website:latest

        aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin 756998121759.dkr.ecr.ap-northeast-1.amazonaws.com

        docker build -t $IMAGE_URI ./homepage
        docker push $IMAGE_URI
    
    - name: グローバルIP取得
      id: ip
      run: echo "IP=$(curl -s https://checkip.amazonaws.com)" >> "$GITHUB_OUTPUT"

    - name: セキュリティグループにIPを追加
      run: |
        aws ec2 authorize-security-group-ingress \
          --group-id ${{ secrets.SECURITY_GROUP_ID }} \
          --protocol tcp \
          --port 22 \
          --cidr ${{ steps.ip.outputs.IP }}/32

    - name: EC2にSSHしてデプロイ
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.SSH_KEY_EC2 }}
        script: |
          docker pull 756998121759.dkr.ecr.ap-northeast-1.amazonaws.com/namespace/mathatoms-website:latest
          docker stop nginx-https || true && docker rm nginx-https || true
          docker run -d --name nginx-https \
            -v /etc/letsencrypt:/etc/letsencrypt:ro \
            -p 80:80 -p 443:443 \
            756998121759.dkr.ecr.ap-northeast-1.amazonaws.com/namespace/mathatoms-website:latest

    - name: セキュリティグループからIPを削除
      if: always()
      run: |
        aws ec2 revoke-security-group-ingress \
          --group-id ${{ secrets.SECURITY_GROUP_ID }} \
          --protocol tcp \
          --port 22 \
          --cidr ${{ steps.ip.outputs.IP }}/32
